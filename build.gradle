plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.9'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.weble'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {
	enabled = true
}

jar {
	enabled = false
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	//cloud MySql 8.0.32 version
	runtimeOnly 'com.mysql:mysql-connector-j:8.0.32'
	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// websocket 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// security 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	//JWT 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// springdoc-openapi
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.2.0'
	annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0'
	implementation 'com.github.therapi:therapi-runtime-javadoc:0.15.0'

	//email 회원가입시 보내기 서비스
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// queryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//Spring boot dev tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}

//queryDsl 설정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file('src/main/generated'))
}

sourceSets {
	main.java.srcDirs +=  ['src/main/generated']
}
clean {
	delete file('src/main/generated')
}
